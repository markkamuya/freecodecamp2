{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 243,
   "id": "d2f11340-2c0b-4578-a619-888b12967dbe",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "def calculate_demographic_data(print_data=True):\n",
    "    # Read data from file\n",
    "    df = pd.read_csv('adult.data.csv')\n",
    "\n",
    "    # How many of each race are represented in this dataset? This should be a Pandas series with race names as the index labels.\n",
    "    out={}\n",
    "    for x in df.iloc[:,8]:\n",
    "        if x in out:\n",
    "            out[x]+=1\n",
    "        else:\n",
    "            out[x]=1\n",
    "    race_count = out\n",
    "\n",
    "    # What is the average age of men?\n",
    "    average_age_men = df.loc[df['sex']=='Male', 'age'].mean()\n",
    "\n",
    "    # What is the percentage of people who have a Bachelor's degree?\n",
    "    out1={}\n",
    "    for x in df.iloc[:,3]:\n",
    "        if x in out1:\n",
    "            out1[x]+=1\n",
    "        else:\n",
    "            out1[x]=1\n",
    "    percentage_bachelors = (out1['Bachelors']/sum(out1.values()))*100\n",
    "\n",
    "    # What percentage of people with advanced education (`Bachelors`, `Masters`, or `Doctorate`) make more than 50K?\n",
    "    # What percentage of people without advanced education make more than 50K?\n",
    "\n",
    "    # with and without `Bachelors`, `Masters`, or `Doctorate`\n",
    "    higher_education_count =df.loc[\n",
    "        ((df['education'] == 'Bachelors') | \n",
    "         (df['education'] == 'Masters') | \n",
    "         (df['education'] == 'Doctorate')) & \n",
    "        (df['salary'] == '>50K'), \n",
    "        'salary'\n",
    "    ].count()  \n",
    "    \n",
    "    total_higher_education_count = out1['Bachelors']+ out1['Masters']+ out1['Doctorate']\n",
    "    higher_education_percentage = (higher_education_count / total_higher_education_count) * 100\n",
    "\n",
    "    # percentage with salary >50K\n",
    "    higher_education_rich = higher_education_percentage\n",
    "\n",
    "    lower_education = df.loc[\n",
    "        ((df['education'] != 'Bachelors') & \n",
    "         (df['education'] != 'Masters') &\n",
    "         (df['education'] != 'Doctorate')) & \n",
    "        (df['salary'] == '>50K'), \n",
    "        'salary'].count()  \n",
    "    total_lower_education = 0\n",
    "    for y in out1:\n",
    "        if y not in ['Bachelors', 'Masters', 'Doctorate']:\n",
    "            total_lower_education+=out1[y]\n",
    "    lower_education_rich = (lower_education/total_lower_education)*100\n",
    "    # What is the minimum number of hours a person works per week (hours-per-week feature)?\n",
    "    min_work_hours = df.iloc[:,12].min()\n",
    "\n",
    "    # What percentage of the people who work the minimum number of hours per week have a salary of >50K?\n",
    "    num_min_workers = len(df.loc[df['hours-per-week'] == 1]) * 100\n",
    "\n",
    "\n",
    "    rich_percentage =  (len(df.loc[(df['hours-per-week'] == 1) & (df['salary'] == '>50K')])/num_min_workers)*100\n",
    "\n",
    "    # What country has the highest percentage of people that earn >50K?\n",
    "    out2={}\n",
    "    for x in df.loc[df['salary']=='>50K','native-country']:\n",
    "        if x in out2:\n",
    "            out2[x]+=1\n",
    "        else:\n",
    "            out2[x]=1\n",
    "    highest_earning_country = ''.join([key for key, value in out2.items() if value == max(out2.values())])\n",
    "    highest_earning_country_percentage = (max(out2.values())/sum(out2.values()))*100\n",
    "\n",
    "    # Identify the most popular occupation for those who earn >50K in India.\n",
    "    out3={}\n",
    "    for x in df.loc[(df['salary']=='>50K')&(df['native-country']=='India'),'occupation']:\n",
    "        if x in out3:\n",
    "            out3[x]+=1\n",
    "        else:\n",
    "            out3[x]=1\n",
    "    top_IN_occupation =  ''.join([key for key,value in out3.items() if value==max(out3.values())])\n",
    "\n",
    "    # DO NOT MODIFY BELOW THIS LINE\n",
    "\n",
    "    if print_data:\n",
    "        print(\"Number of each race:\\n\", race_count) \n",
    "        print(\"Average age of men:\", average_age_men)\n",
    "        print(f\"Percentage with Bachelors degrees: {percentage_bachelors}%\")\n",
    "        print(f\"Percentage with higher education that earn >50K: {higher_education_rich}%\")\n",
    "        print(f\"Percentage without higher education that earn >50K: {lower_education_rich}%\")\n",
    "        print(f\"Min work time: {min_work_hours} hours/week\")\n",
    "        print(f\"Percentage of rich among those who work fewest hours: {rich_percentage}%\")\n",
    "        print(\"Country with highest percentage of rich:\", highest_earning_country)\n",
    "        print(f\"Highest percentage of rich people in country: {highest_earning_country_percentage}%\")\n",
    "        print(\"Top occupations in India:\", top_IN_occupation)\n",
    "\n",
    "    return {\n",
    "        'race_count': race_count,\n",
    "        'average_age_men': average_age_men,\n",
    "        'percentage_bachelors': percentage_bachelors,\n",
    "        'higher_education_rich': higher_education_rich,\n",
    "        'lower_education_rich': lower_education_rich,\n",
    "        'min_work_hours': min_work_hours,\n",
    "        'rich_percentage': rich_percentage,\n",
    "        'highest_earning_country': highest_earning_country,\n",
    "        'highest_earning_country_percentage':\n",
    "        highest_earning_country_percentage,\n",
    "        'top_IN_occupation': top_IN_occupation\n",
    "    }\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 244,
   "id": "7e613669-b074-491c-a7ac-93eb4630bc0d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of each race:\n",
      " {'White': 27816, 'Black': 3124, 'Asian-Pac-Islander': 1039, 'Amer-Indian-Eskimo': 311, 'Other': 271}\n",
      "Average age of men: 39.43354749885268\n",
      "Percentage with Bachelors degrees: 16.44605509658794%\n",
      "Percentage with higher education that earn >50K: 46.535843011613935%\n",
      "Percentage without higher education that earn >50K: 17.3713601914639%\n",
      "Min work time: 1 hours/week\n",
      "Percentage of rich among those who work fewest hours: 0.1%\n",
      "Country with highest percentage of rich: United-States\n",
      "Highest percentage of rich people in country: 91.45517153424308%\n",
      "Top occupations in India: Prof-specialty\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "{'race_count': {'White': 27816,\n",
       "  'Black': 3124,\n",
       "  'Asian-Pac-Islander': 1039,\n",
       "  'Amer-Indian-Eskimo': 311,\n",
       "  'Other': 271},\n",
       " 'average_age_men': 39.43354749885268,\n",
       " 'percentage_bachelors': 16.44605509658794,\n",
       " 'higher_education_rich': 46.535843011613935,\n",
       " 'lower_education_rich': 17.3713601914639,\n",
       " 'min_work_hours': 1,\n",
       " 'rich_percentage': 0.1,\n",
       " 'highest_earning_country': 'United-States',\n",
       " 'highest_earning_country_percentage': 91.45517153424308,\n",
       " 'top_IN_occupation': 'Prof-specialty'}"
      ]
     },
     "execution_count": 244,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "calculate_demographic_data()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
